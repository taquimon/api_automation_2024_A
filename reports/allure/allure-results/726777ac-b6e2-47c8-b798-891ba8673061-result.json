{"name": "test_update_project", "status": "failed", "statusDetails": {"message": "AssertionError: Expecting '200' but received '404'", "trace": "self = <test_projects.TestProjects object at 0x7fd58ec20cb0>, create_project = '2331508120', _test_log_name = None\n\n    def test_update_project(self, create_project, _test_log_name):\n        \"\"\"\n        Test to update the project\n        :param create_project:\n        :param _test_log_name:\n        \"\"\"\n    \n        LOGGER.debug(\"Project to update: %s\", create_project)\n        url_todo_update = f\"{self.url_projects}/{create_project}\"\n        body_project = {\n            \"name\": \"Update project\"\n        }\n        response = self.rest_client.request(\"post\", url=url_todo_update, body=body_project)\n    \n        # add to list of projects to be deleted in cleanup\n        self.list_projects.append(create_project)\n>       self.validate.validate_response(response, \"update_project\")\n\ntodo_api/projects/test_projects.py:94: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nhelpers/validate_response.py:17: in validate_response\n    self.validate_value(expected_response[\"status_code\"], actual_response[\"status_code\"], \"status_code\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <helpers.validate_response.ValidateResponse object at 0x7fd58ec17680>, expected_value = 200, actual_value = 404, key_compare = 'status_code'\n\n    def validate_value(self, expected_value, actual_value, key_compare):\n        \"\"\"\n    \n        :param expected_value:\n        :param actual_value:\n        :param key_compare:\n        :return:\n        \"\"\"\n        LOGGER.info(\"Validating %s: \", key_compare)\n        error_message = f\"Expecting '{expected_value}' but received '{actual_value}'\"\n        if key_compare == \"body\":\n            if isinstance(actual_value, list):\n                if len(actual_value) > 0:\n                    assert self.compare_json(expected_value[0], actual_value[0]), error_message\n            else:\n                assert self.compare_json(expected_value, actual_value), error_message\n        elif key_compare == \"headers\":\n            LOGGER.debug(\"Expected Headers: %s\", expected_value.items())\n            LOGGER.debug(\"Actual Headers: %s\", actual_value.items())\n            assert expected_value.items() <= actual_value.items(), error_message\n        else:\n            LOGGER.debug(\"Expected Status Code: %s\", expected_value)\n            LOGGER.debug(\"Actual Status Code: %s\", actual_value)\n>           assert expected_value == actual_value, error_message\nE           AssertionError: Expecting '200' but received '404'\n\nhelpers/validate_response.py:44: AssertionError"}, "description": "\n        Test to update the project\n        :param create_project:\n        :param _test_log_name:\n        ", "start": 1712607400731, "stop": 1712607401122, "uuid": "00cba172-50ac-4a1b-a1a9-527a64cda728", "historyId": "5e2bd4e2573faff58095915e49e1bb66", "testCaseId": "5e2bd4e2573faff58095915e49e1bb66", "fullName": "todo_api.projects.test_projects.TestProjects#test_update_project", "labels": [{"name": "story", "value": "Projects"}, {"name": "epic", "value": "TODO API"}, {"name": "parentSuite", "value": "todo_api.projects"}, {"name": "suite", "value": "test_projects"}, {"name": "subSuite", "value": "TestProjects"}, {"name": "host", "value": "etaquichiri"}, {"name": "thread", "value": "1195102-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "todo_api.projects.test_projects"}]}